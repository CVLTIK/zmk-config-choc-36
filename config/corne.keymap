#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3

//testing mouse movement and scroll binds...

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
            timeout-ms = <100>;
        };

        Return {
            bindings = <&kp RETURN>;
            key-positions = <22 21>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <10 9>;
            require-prior-idle-ms = <100>;
        };

        Caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <38 39>;
        };

        ShiftReturn {
            bindings = <&kp LS(RETURN)>;
            key-positions = <37 40>;
        };

        Application {
            bindings = <&kp LG(A)>;
            key-positions = <36 41>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        KeyPress {
            display-name = "KYB";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &kp Q        &kp D           &kp R        &kp W           &kp B                    &kp J                 &kp F            &kp U         &kp P            &kp BACKSPACE        &none
&none  &hm COLON A  &hm LEFT_ALT S  &hm LCTRL H  &hm LEFT_GUI T  &kp G                    &kp Y                 &hm RIGHT_GUI N  &hm RCTRL E   &hm RIGHT_ALT O  &hm SEMI I           &none
&none  &hm LC(Z) Z  &hm LC(X) X     &kp M        &hm LC(C) C     &hm LC(V) V              &kp K                 &kp L            &kp COMMA     &kp DOT          &mt BACKSLASH SLASH  &none
                                    &mo 1        &mo 2           &mt LG(RETURN) RETURN    &mt LEFT_SHIFT SPACE  &mo 3            &kp LEFT_GUI
            >;

            label = "KeyPress";
        };

        Symbol {
            bindings = <
&trans  &mt RIGHT_BRACE LEFT_BRACE              &kp EXCL       &kp AT       &kp POUND      &kp PIPE     &none      &none     &none              &none      &none      &trans
&trans  &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &kp DOLLAR     &kp PERCENT  &kp ASTRK      &kp MINUS    &kp UNDER  &kp APOS  &kp DOUBLE_QUOTES  &kp GRAVE  &kp TILDE  &trans
&trans  &mt RIGHT_BRACKET LEFT_BRACKET          &kp AMPERSAND  &kp EQUAL    &kp AMPERSAND  &kp PLUS     &none      &none     &none              &none      &none      &trans
                                                               &trans       &trans         &trans       &trans     &trans    &trans
            >;

            label = "SYM";
        };

        NumPad {
            bindings = <
&trans  &kp C_MUTE    &kp K_MUTE        &kp C_VOL_DN          &kp C_VOL_UP          &trans    &none   &hm LS(LG(N7)) N7              &hm LS(LG(N8)) N8              &hm LS(LG(N9)) NUMBER_9        &kp COMMA       &trans
&trans  &trans        &kp K_PLAY_PAUSE  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans    &none   &hm LS(LG(NUMBER_4)) NUMBER_4  &hm LS(LG(N5)) N5              &hm LS(LG(NUMBER_6)) NUMBER_6  &kp LEFT_SHIFT  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2          &bt BT_SEL 3          &trans    &none   &hm LG(LS(NUMBER_1)) NUMBER_1  &hm LS(LG(NUMBER_2)) NUMBER_2  &hm LS(LG(NUMBER_3)) NUMBER_3  &kp DOT         &trans
                                        &trans                &trans                &trans    &kp N0  &kp LEFT_GUI                   &none
            >;

            label = "NUM";
        };

        Mouse {
            bindings = <
&trans  &kp RCTRL      &msc SCRL_DOWN      &mmv MOVE_Y(-1200)  &msc SCRL_UP       &kp K_BACK       &kp F1   &kp F2    &kp UP    &kp F3     &kp F4        &trans
&trans  &mkp RCLK      &mmv MOVE_X(-1200)  &mmv MOVE_Y(1200)   &mmv MOVE_X(1200)  &kp K_FORWARD    &kp F11  &kp LEFT  &kp DOWN  &kp RIGHT  &kp LEFT_GUI  &trans
&trans  &kp LC(MINUS)  &msc SCRL_LEFT      &none               &msc SCRL_RIGHT    &kp LC(PLUS)     &kp F6   &kp F7    &kp F8    &kp F9     &kp F10       &trans
                                           &kp LEFT_SHIFT      &kp F12            &mkp LCLK        &kp F5   &trans    &trans
            >;

            label = "MSE";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
