#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3

//testing mouse movement and scroll binds...

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };
    };

    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        Return {
            bindings = <&kp RETURN>;
            key-positions = <22 21>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <10 9>;
        };

        SystemLayer {
            bindings = <&mo 4>;
            key-positions = <37 40>;
        };

        ShiftReturn {
            bindings = <&kp LS(RETURN)>;
            key-positions = <38 39>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        KeyPress {
            display-name = "KYB";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &kp Q        &kp D           &kp R             &kp W           &kp B             &kp J      &kp F            &kp U        &kp P            &kp BACKSPACE        &none
&none  &hm COLON A  &hm LEFT_ALT S  &hm LCTRL H       &hm LEFT_GUI T  &kp G             &kp Y      &hm RIGHT_GUI N  &hm RCTRL E  &hm RIGHT_ALT O  &hm SEMI I           &none
&none  &mt LC(Z) Z  &mt LC(X) X     &kp M             &mt LC(C) C     &mt LC(V) V       &kp K      &kp L            &kp COMMA    &kp DOT          &mt BACKSLASH SLASH  &none
                                    &kp LS(LEFT_GUI)  &mo 3           &kp LEFT_SHIFT    &kp SPACE  &mo 1            &mo 2
            >;

            label = "KeyPress";
        };

        NumPad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_NUMLOCK                       &mt LS(LG(KP_NUMBER_7)) KP_NUMBER_7  &mt LS(LG(KP_NUMBER_8)) KP_NUMBER_8  &mt LS(LG(KP_NUMBER_9)) NUMBER_9     &none         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &none                                &mt LS(LG(KP_NUMBER_4)) KP_NUMBER_4  &mt LS(LG(KP_NUMBER_5)) KP_NUMBER_5  &mt LS(LG(KP_NUMBER_6)) KP_NUMBER_6  &kp LEFT_GUI  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mt LS(LG(KP_NUMBER_0)) KP_NUMBER_0  &mt LG(LS(KP_NUMBER_1)) KP_NUMBER_1  &mt LS(LG(KP_NUMBER_1)) KP_NUMBER_1  &mt LS(LG(KP_NUMBER_3)) KP_NUMBER_3  &none         &trans
                        &trans  &trans  &trans    &trans                               &trans                               &trans
            >;

            label = "NUM";
        };

        Symbol {
            bindings = <
&trans  &mt RIGHT_BRACE LEFT_BRACE              &kp EXCL       &kp AT       &kp POUND      &kp PIPE     &none      &none     &none              &none      &none      &trans
&trans  &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &kp DOLLAR     &kp PERCENT  &kp ASTRK      &kp MINUS    &kp UNDER  &kp APOS  &kp DOUBLE_QUOTES  &kp GRAVE  &kp TILDE  &trans
&trans  &mt RIGHT_BRACKET LEFT_BRACKET          &kp AMPERSAND  &kp EQUAL    &kp AMPERSAND  &kp PLUS     &none      &none     &none              &none      &none      &trans
                                                               &trans       &trans         &trans       &trans     &trans    &trans
            >;

            label = "SYM";
        };

        Mouse {
            bindings = <
&trans  &kp F5     &msc SCRL_DOWN      &mmv MOVE_Y(-2000)  &msc SCRL_UP       &kp K_BACK       &none             &none         &none     &none         &none      &trans
&trans  &mkp RCLK  &mmv MOVE_X(-2000)  &mkp LCLK           &mmv MOVE_X(2000)  &kp K_FORWARD    &none             &kp LEFT      &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans
&trans  &none      &msc SCRL_LEFT      &mmv MOVE_Y(2000)   &msc SCRL_RIGHT    &none            &none             &none         &none     &none         &none      &trans
                                       &trans              &trans             &trans           &kp LS(LEFT_GUI)  &kp LEFT_GUI  &trans
            >;

            label = "MSE";
        };

        System {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &studio_unlock    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans            &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans            &trans  &trans  &trans
            >;

            label = "SYS";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
